actData <- read.csv("activity.csv", sep=",", header = TRUE, stringsAsFactors=FALSE, na.strings="NA")
View(actData)
str(actData)
actData$interval <- as.factor(actData$interval)
actData$date <- as.Date(actData$date, format = "%Y-%m-%d")
perDaySteps <-
na.omit(actData) %>%
select(steps, date, interval) %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
perDaySteps <-
na.omit(actData) %>%
select(steps, date, interval) %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
perDaySteps <-
na.omit(actData) %>%
select(steps, date, interval) %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
perDaySteps <-
na.omit(actData) %>%
select(steps, date, interval) %>%
group_by(date) %>%
summarise(totSteps = sum(steps))
library(dplyr)
library(ggplot2)
l
perDaySteps <-
na.omit(actData) %>%
select(steps, date, interval) %>%
group_by(date) %>%
summarise(totSteps = sum(steps))
)
perDaySteps <-
na.omit(actData) %>%
select(steps, date, interval) %>%
group_by(date) %>%
summarise(totSteps = sum(steps))
View(perDaySteps)
ggplot(perDaySteps, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
abs(x = "Number of Steps per Day", y = "Number of times in a day(Count)",
title="Histogram of Steps Taken per Day") +
theme_bw()
ggplot(perDaySteps, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(x = "Number of Steps per Day", y = "Number of times in a day(Count)",
title="Histogram of Steps Taken per Day") +
theme_bw()
ggplot(perDaySteps, aes(x = totSteps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(x = "Number of Steps per Day", y = "Number of times in a day(Count)",
title="Histogram of Steps Taken per Day") +
theme_bw()
perDaySteps_mean   <- mean(perDaySteps$totSteps, na.rm=TRUE)
perDaySteps_median <- median(perDaySteps$totSteps, na.rm=TRUE)
intervalGrp <-
actData %>%
group_by(interval) %>%
summarize(avgSteps = round(mean(steps, na.rm=TRUE)))
intervalGrp$intervDateFormat <- strptime(intervalGrp$interval, format="%H%M")
View(intervalGrp)
View(intervalGrp)
ggplot(data=intervalGrp, aes(x=intervDateFormat, y=avgSteps)) +
scale_x_datetime(labels=(date_format("%H:%M")), breaks="2 hours") +
xlab("5-min Interval") +
ylab("Average Number of Steps") +
geom_line()
library(scales)
ggplot(data=intervalGrp, aes(x=intervDateFormat, y=avgSteps)) +
scale_x_datetime(labels=(date_format("%H:%M")), breaks="2 hours") +
xlab("5-min Interval") +
ylab("Average Number of Steps") +
geom_line()
intervalGrp <-
na.omit(actData) %>%
group_by(interval) %>%
summarize(avgSteps = round(mean(steps, na.rm=TRUE)))
View(intervalGrp)
intervalGrp <-
actData %>%
group_by(interval) %>%
summarize(avgSteps = round(mean(steps, na.rm=TRUE)))
View(intervalGrp)
rm(intervalGrp)
intervalGrp <-
na.omit(actData) %>%
group_by(interval) %>%
summarize(avgSteps = round(mean(steps, na.rm=TRUE)))
intervalGrp$intervDateFormat <- strptime(intervalGrp$interval, format="%H%M")
View(intervalGrp)
View(intervalGrp)
ggplot(data=intervalGrp, aes(x=intervDateFormat, y=avgSteps)) +
scale_x_datetime(labels=(date_format("%H:%M")), breaks="2 hours") +
xlab("5-min Interval") +
ylab("Average Number of Steps") +
geom_line()
ggplot(data=intervalGrp, aes(x=intervDateFormat, y=avgSteps)) +
scale_x_datetime(labels=(date_format("%H:%M")), breaks="1 hours") +
xlab("5-min Interval") +
ylab("Average Number of Steps") +
geom_line()
ggplot(perDaySteps, aes(x=interval, y=steps)) +
geom_line(color="orange", size=1) +
labs(title="Average Daily Activity Pattern", x="Interval", y="Number of steps") +
)
ggplot(perDaySteps, aes(x=interval, y=steps)) +
geom_line(color="orange", size=1) +
labs(title="Average Daily Activity Pattern", x="Interval", y="Number of steps") +
theme_bw()
ggplot(perDaySteps, aes(x=interval, y=steps)) +
geom_line(color="orange", size=1) +
labs(title="Average Daily Activity Pattern", x="Interval", y="Number of steps") +
theme_bw()
steps_per_interval <- aggregate(actData$steps,
by = list(interval = actData$interval),
FUN=mean, na.rm=TRUE)
View(steps_per_interval)
View(intervalGrp)
steps_per_interval$interval <-
as.integer(levels(steps_per_interval$interval)[steps_per_interval$interval])
colnames(steps_per_interval) <- c("interval", "steps")
View(steps_per_interval)
ggplot(steps_per_interval, aes(x=interval, y=steps)) +
geom_line(color="orange", size=1) +
labs(title="Average Daily Activity Pattern", x="Interval", y="Number of steps") +
theme_bw()
steps_per_interval <- aggregate(actData$steps,
by = list(interval = actData$interval),
FUN=mean, na.rm=TRUE)
ggplot(steps_per_interval, aes(x=interval, y=steps)) +
geom_line(color="orange", size=1) +
labs(title="Average Daily Activity Pattern", x="Interval", y="Number of steps") +
theme_bw()
View(steps_per_interval)
colnames(steps_per_interval) <- c("interval", "steps")
ggplot(steps_per_interval, aes(x=interval, y=steps)) +
geom_line(color="orange", size=1) +
labs(title="Average Daily Activity Pattern", x="Interval", y="Number of steps") +
theme_bw()
ggplot(data=intervalGrp, aes(x=intervDateFormat, y=avgSteps)) +
scale_x_datetime(labels=(date_format("%H:%M")), breaks="2 hours") +
xlab("5-min Interval") +
ylab("Average Number of Steps") +
geom_line()
View(actData)
rm(list=ls())
